name: Vote Service GitOps PR

on:
  push:
    branches: [ main, develop ]
    paths: [ 'vote/**', '.github/workflows/vote.yaml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'vote/**', '.github/workflows/vote.yaml' ]
  workflow_dispatch:

env:
  HARBOR_REGISTRY: hw-harbor.bluesunnywings.com
  HARBOR_PROJECT: sysdig-poc
  SERVICE: vote

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: docker/setup-buildx-action@v3
        
      - name: Harbor Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build for Scan
        run: docker build --platform linux/amd64 --target final -t ${{ env.SERVICE }}-scan:${{ github.sha }} ./vote
          
      - name: Security Scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: ${{ env.SERVICE }}-scan:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false

      - name: Push to Harbor (Docker v2 Compatible)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: ./vote
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-latest
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-${{ github.sha }}
          target: final
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          outputs: type=image,oci-mediatypes=false

      - name: Create GitOps PR
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          # Configure git
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Create unique branch name
          BRANCH_NAME="gitops/${{ env.SERVICE }}-${{ github.sha }}-$(date +%s)"
          
          # Create and switch to new branch
          git checkout -b "$BRANCH_NAME"
          
          # Update image tag in manifest
          sed -i "s|image: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:.*|image: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-${{ github.sha }}|g" manifests/vote/deployment.yaml
          
          # Check if there are changes to commit
          if git diff --quiet manifests/vote/deployment.yaml; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Commit changes
          git add manifests/vote/deployment.yaml
          git commit -m "üöÄ Update ${{ env.SERVICE }} image to v2-${{ github.sha }}

          Auto-updated by GitHub Actions
          - Workflow: ${{ github.workflow }}
          - Run: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
          - Image: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-${{ github.sha }}"
          
          # Push branch
          git push origin "$BRANCH_NAME"
          
          # Create PR using GitHub CLI
          gh pr create \
            --title "üöÄ GitOps: Update ${{ env.SERVICE }} to v2-${{ github.sha }}" \
            --body "## üöÄ Automated GitOps Update

          **Service**: ${{ env.SERVICE }}
          **New Image**: \`${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-${{ github.sha }}\`
          **Workflow Run**: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          **Source Commit**: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})

          ### üîç Changes
          - Updated container image tag in \`manifests/${{ env.SERVICE }}/deployment.yaml\`
          - Passed security scanning with Sysdig
          - Successfully pushed to Harbor Registry

          ### ‚úÖ Auto-merge
          This PR will be automatically merged if all checks pass." \
            --head "$BRANCH_NAME" \
            --base main \
            --label "gitops,automated,${{ env.SERVICE }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge PR
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          # Wait a moment for PR to be created
          sleep 5
          
          # Get PR number
          PR_NUMBER=$(gh pr list --head "gitops/${{ env.SERVICE }}-${{ github.sha }}-*" --json number --jq '.[0].number')
          
          if [ -n "$PR_NUMBER" ]; then
            echo "Auto-merging PR #$PR_NUMBER"
            gh pr merge "$PR_NUMBER" --squash --delete-branch
          else
            echo "PR not found for auto-merge"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF
        if: always() && hashFiles('sarif.json') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.json

      - name: Archive Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SERVICE }}-scan-${{ github.sha }}
          path: |
            sarif.json
            scan-result.json
          if-no-files-found: ignore
