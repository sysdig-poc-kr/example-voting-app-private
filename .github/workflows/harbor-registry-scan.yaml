name: Harbor Registry Security Scan
# Harbor Registry에 푸시된 이미지들의 보안 스캔

on:
  workflow_run:
    workflows: 
      - "Build Vote - Harbor Registry"
      - "Build Worker - Harbor Registry" 
      - "Build Result - Harbor Registry"
    types:
      - completed
  schedule:
    # 매일 오전 6시 (UTC)에 실행
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to scan (vote, worker, result, all)'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - vote
        - worker
        - result

env:
  HARBOR_REGISTRY: hw-harbor.bluesunnywings.com
  HARBOR_PROJECT: sysdig-poc

jobs:
  scan-harbor-images:
    name: Scan Harbor Registry Images
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    
    strategy:
      matrix:
        service: [vote, worker, result]
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check if service should be scanned
        id: check-service
        run: |
          if [[ "${{ github.event.inputs.service }}" == "all" || "${{ github.event.inputs.service }}" == "${{ matrix.service }}" || "${{ github.event_name }}" != "workflow_dispatch" ]]; then
            echo "should_scan=true" >> $GITHUB_OUTPUT
          else
            echo "should_scan=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Harbor Registry
        if: steps.check-service.outputs.should_scan == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Pull latest image from Harbor
        if: steps.check-service.outputs.should_scan == 'true'
        run: |
          IMAGE_NAME="${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ matrix.service }}:latest"
          echo "Pulling image: $IMAGE_NAME"
          docker pull $IMAGE_NAME
          docker tag $IMAGE_NAME ${{ matrix.service }}-harbor:latest
          echo "IMAGE_TAG=${{ matrix.service }}-harbor:latest" >> $GITHUB_ENV

      - name: Sysdig Container Image Scan
        if: steps.check-service.outputs.should_scan == 'true'
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: ${{ env.IMAGE_TAG }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          cli-scanner-version: 1.22.5
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report to GitHub Security
        if: steps.check-service.outputs.should_scan == 'true' && (success() || failure())
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Scan Results
        if: steps.check-service.outputs.should_scan == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-harbor-scan-results
          path: |
            sarif.json
            scan-result.json
          if-no-files-found: warn

      - name: Scan Summary
        if: steps.check-service.outputs.should_scan == 'true' && always()
        run: |
          echo "## 🐳 Harbor Registry Scan - ${{ matrix.service }} Service" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ **Registry**: \`${{ env.HARBOR_REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **Project**: \`${{ env.HARBOR_PROJECT }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🏷️ **Service**: \`${{ matrix.service }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 **Scanned Image**: \`${{ env.IMAGE_TAG }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Configuration:**" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ **Severity Filter**: Medium and above" >> $GITHUB_STEP_SUMMARY
          echo "- 🛡️ **Scanner Version**: 1.22.5" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 **Mode**: Vulnerability Management (VM)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Results Location:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 **Sysdig Secure Console**: Complete vulnerability analysis and policy evaluation" >> $GITHUB_STEP_SUMMARY
          echo "- 📋 **GitHub Security**: SARIF report uploaded for code scanning alerts" >> $GITHUB_STEP_SUMMARY
          echo "- 📁 **Artifacts**: Detailed scan results available in workflow artifacts" >> $GITHUB_STEP_SUMMARY

  registry-scan-summary:
    name: Registry Scan Summary
    runs-on: ubuntu-latest
    needs: scan-harbor-images
    if: always()
    
    steps:
      - name: Overall Summary
        run: |
          echo "## 🏗️ Harbor Registry Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "**Source Workflow:** ${{ github.event.workflow_run.name }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry Information:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ **Harbor Registry**: \`${{ env.HARBOR_REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **Project**: \`${{ env.HARBOR_PROJECT }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 **Services Scanned**: vote, worker, result" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ **Note**: This scan validates images stored in Harbor Registry for production deployment security." >> $GITHUB_STEP_SUMMARY
