name: Vote Service

on:
  push:
    branches: [ main, develop ]
    paths: [ 'vote/**', '.github/workflows/vote.yaml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'vote/**', '.github/workflows/vote.yaml' ]
  workflow_dispatch:

env:
  HARBOR_REGISTRY: hw-harbor.bluesunnywings.com
  HARBOR_PROJECT: sysdig-poc
  SERVICE: vote

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        
      - name: Harbor Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build for Scan
        run: docker build --platform linux/amd64 --target final -t ${{ env.SERVICE }}-scan:${{ github.sha }} ./vote
          
      - name: Security Scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: ${{ env.SERVICE }}-scan:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false

      - name: Push to Harbor (Docker v2 Compatible)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: ./vote
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-latest
            ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.SERVICE }}:v2-${{ github.sha }}
          target: final
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          outputs: type=image,oci-mediatypes=false

      - name: Upload SARIF
        if: always() && hashFiles('sarif.json') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.json

      - name: Archive Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SERVICE }}-scan-${{ github.sha }}
          path: |
            sarif.json
            scan-result.json
          if-no-files-found: ignore
