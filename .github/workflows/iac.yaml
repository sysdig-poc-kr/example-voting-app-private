name: Infrastructure Security

on:
  push:
    branches: [ main, develop ]
    paths: [ 'k8s-specifications/**', '.github/workflows/iac.yaml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'k8s-specifications/**', '.github/workflows/iac.yaml' ]
  workflow_dispatch:  # ÏàòÎèô Ïã§Ìñâ Í∞ÄÎä•

jobs:
  iac-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ï†ÑÏ≤¥ ÌûàÏä§ÌÜ†Î¶¨ Í∞ÄÏ†∏Ïò§Í∏∞

      - name: Verify Sysdig credentials
        run: |
          if [ -z "${{ secrets.SYSDIG_SECURE_API_TOKEN }}" ]; then
            echo "‚ùå SYSDIG_SECURE_API_TOKEN is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SYSDIG_SECURE_ENDPOINT }}" ]; then
            echo "‚ùå SYSDIG_SECURE_ENDPOINT is not set"
            exit 1
          fi
          echo "‚úÖ Sysdig credentials are configured"
          echo "üîó Endpoint: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}"

      - name: List IaC files to scan
        run: |
          echo "üìÅ Files to be scanned:"
          find ./k8s-specifications -type f \( -name "*.yaml" -o -name "*.yml" \) | sort
          echo ""
          echo "üìä Total files: $(find ./k8s-specifications -type f \( -name "*.yaml" -o -name "*.yml" \) | wc -l)"

      - name: IaC Security Scan
        id: iac-scan
        uses: sysdiglabs/scan-action@v6
        with:
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          mode: iac
          iac-scan-path: ./k8s-specifications
          recursive: true
          minimum-severity: medium
          stop-on-failed-policy-eval: false
          iac-group-by: policy
          output-format: json
        continue-on-error: true

      - name: Check scan results
        if: always()
        run: |
          echo "üîç Checking scan output files..."
          ls -la || true
          
          if [ -f "sarif.json" ]; then
            echo "‚úÖ SARIF file generated"
            echo "üìÑ SARIF file size: $(wc -c < sarif.json) bytes"
            echo "üîç SARIF content preview:"
            head -20 sarif.json || true
          else
            echo "‚ùå SARIF file not found"
          fi
          
          if [ -f "scan-result.json" ]; then
            echo "‚úÖ Scan result file generated"
            echo "üìÑ Scan result file size: $(wc -c < scan-result.json) bytes"
            echo "üîç Scan result preview:"
            head -20 scan-result.json || true
          else
            echo "‚ùå Scan result file not found"
          fi

      - name: Upload SARIF to GitHub Security
        if: always() && hashFiles('sarif.json') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.json
        continue-on-error: true

      - name: Archive scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iac-scan-results-${{ github.run_number }}
          path: |
            sarif.json
            scan-result.json
            *.json
          if-no-files-found: warn
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "## üõ°Ô∏è IaC Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Scan Path**: ./k8s-specifications" >> $GITHUB_STEP_SUMMARY
          echo "- **Minimum Severity**: medium" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "sarif.json" ]; then
            echo "‚úÖ **SARIF Report**: Generated and uploaded to GitHub Security" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **SARIF Report**: Not generated" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "scan-result.json" ]; then
            echo "‚úÖ **Scan Results**: Available in artifacts" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Scan Results**: Not available" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìä **View Results**: Check Sysdig Secure Console at ${{ secrets.SYSDIG_SECURE_ENDPOINT }}" >> $GITHUB_STEP_SUMMARY
