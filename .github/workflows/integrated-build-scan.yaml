name: Integrated Build and Security Scan
# Harbor Registry 빌드 후 즉시 보안 스캔 실행

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'vote/**'
      - 'worker/**'
      - 'result/**'
      - '.github/workflows/integrated-build-scan.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'vote/**'
      - 'worker/**'
      - 'result/**'
      - '.github/workflows/integrated-build-scan.yaml'

env:
  HARBOR_REGISTRY: hw-harbor.bluesunnywings.com
  HARBOR_PROJECT: sysdig-poc

jobs:
  # 변경된 서비스 감지
  detect-changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      vote: ${{ steps.changes.outputs.vote }}
      worker: ${{ steps.changes.outputs.worker }}
      result: ${{ steps.changes.outputs.result }}
      any: ${{ steps.changes.outputs.vote == 'true' || steps.changes.outputs.worker == 'true' || steps.changes.outputs.result == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Detect Changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            vote:
              - 'vote/**'
            worker:
              - 'worker/**'
            result:
              - 'result/**'

  # Vote 서비스 빌드 및 스캔
  vote-build-scan:
    name: Vote - Build & Scan
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.vote == 'true'
    
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Harbor Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/vote
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            
      - name: Build and push to Harbor
        uses: docker/build-push-action@v5
        with:
          context: ./vote
          file: ./vote/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/vote,push=${{ github.event_name != 'pull_request' }}
          
      - name: Build for local scan
        run: |
          docker build -t vote-scan:${{ github.sha }} ./vote --target final --platform linux/amd64
          
      - name: Sysdig Security Scan
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: vote-scan:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          cli-scanner-version: 1.22.5
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vote-integrated-scan-results
          path: |
            sarif.json
            scan-result.json

  # Worker 서비스 빌드 및 스캔
  worker-build-scan:
    name: Worker - Build & Scan
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.worker == 'true'
    
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Harbor Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/worker
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            
      - name: Build and push to Harbor
        uses: docker/build-push-action@v5
        with:
          context: ./worker
          file: ./worker/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/worker,push=${{ github.event_name != 'pull_request' }}
          
      - name: Build for local scan
        run: |
          docker build -t worker-scan:${{ github.sha }} ./worker --platform linux/amd64
          
      - name: Sysdig Security Scan
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: worker-scan:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          cli-scanner-version: 1.22.5
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: worker-integrated-scan-results
          path: |
            sarif.json
            scan-result.json

  # Result 서비스 빌드 및 스캔
  result-build-scan:
    name: Result - Build & Scan
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.result == 'true'
    
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Harbor Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/result
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            
      - name: Build and push to Harbor
        uses: docker/build-push-action@v5
        with:
          context: ./result
          file: ./result/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/result,push=${{ github.event_name != 'pull_request' }}
          
      - name: Build for local scan
        run: |
          docker build -t result-scan:${{ github.sha }} ./result --platform linux/amd64
          
      - name: Sysdig Security Scan
        id: scan
        uses: sysdiglabs/scan-action@v6
        with:
          image-tag: result-scan:${{ github.sha }}
          sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ secrets.SYSDIG_SECURE_ENDPOINT }}
          cli-scanner-version: 1.22.5
          mode: vm
          severity-at-least: medium
          stop-on-failed-policy-eval: false
          stop-on-processing-error: false

      - name: Upload SARIF Report
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ github.workspace }}/sarif.json

      - name: Archive Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: result-integrated-scan-results
          path: |
            sarif.json
            scan-result.json

  # 통합 요약
  integration-summary:
    name: Integration Summary
    runs-on: ubuntu-latest
    needs: [detect-changes, vote-build-scan, worker-build-scan, result-build-scan]
    if: always() && needs.detect-changes.outputs.any == 'true'
    
    steps:
      - name: Integration Summary
        run: |
          echo "## 🚀 Integrated Build & Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Changed Services:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🗳️ **Vote**: ${{ needs.detect-changes.outputs.vote == 'true' && '✅ Built & Scanned' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- ⚙️ **Worker**: ${{ needs.detect-changes.outputs.worker == 'true' && '✅ Built & Scanned' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 **Result**: ${{ needs.detect-changes.outputs.result == 'true' && '✅ Built & Scanned' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Configuration:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ **Registry**: \`${{ env.HARBOR_REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **Project**: \`${{ env.HARBOR_PROJECT }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🖥️ **Platform**: \`linux/amd64\` (Sysdig compatible)" >> $GITHUB_STEP_SUMMARY
          echo "- 🔒 **Security Scan**: Immediate post-build scanning" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ **Note**: This workflow provides integrated build and security scanning for optimal Harbor Registry and Sysdig compatibility." >> $GITHUB_STEP_SUMMARY
